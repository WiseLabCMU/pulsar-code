/*
 * Copyright (c) 2013 - 2016, Freescale Semiconductor, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * o Redistributions of source code must retain the above copyright notice, this list
 *   of conditions and the following disclaimer.
 *
 * o Redistributions in binary form must reproduce the above copyright notice, this
 *   list of conditions and the following disclaimer in the documentation and/or
 *   other materials provided with the distribution.
 *
 * o Neither the name of Freescale Semiconductor, Inc. nor the names of its
 *   contributors may be used to endorse or promote products derived from this
 *   software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* This is a template file for pins configuration created by New Kinetis SDK 2.x Project Wizard. Enjoy! */

#include "fsl_device_registers.h"

/*******************************************************************************
 * Code
 ******************************************************************************/
/*!
 * @brief Initialize all pins used in this example
 */
void BOARD_InitPins(void) {
  /* This is a template function for pins configuration. Intentionally empty */
	// enable port clocks
	CLOCK_EnableClock(kCLOCK_PortA); // Debug Serial: UART0
	CLOCK_EnableClock(kCLOCK_PortC); // DW1000: SPI0, DW1000: GPIO, Switches: GPIO, LED: GPIO
	CLOCK_EnableClock(kCLOCK_PortD); // PLL: SPI1, PLL: GPIO
	CLOCK_EnableClock(kCLOCK_PortE); // CSAC: UART1

	// LEDs
	PORT_SetPinMux(BOARD_LED_GREEN_GPIO_PORT, BOARD_LED_GREEN_GPIO_PIN, kPORT_MuxAsGpio);
	PORT_SetPinMux(BOARD_LED_RED_GPIO_PORT, BOARD_LED_RED_GPIO_PIN, kPORT_MuxAsGpio);

	// Switches

	// DW1000 SPI0

	PORT_SetPinMux(BOARD_DW1000_SPI_PORT, BOARD_DW1000_SPI_CS_PIN, BOARD_DW1000_SPI_ALT); // DW1000: SPI0 CS0
	PORT_SetPinMux(BOARD_DW1000_SPI_PORT, BOARD_DW1000_SPI_SCK_PIN, BOARD_DW1000_SPI_ALT); // DW1000: SPI0 SCK
	PORT_SetPinMux(BOARD_DW1000_SPI_PORT, BOARD_DW1000_SPI_MOSI_PIN, BOARD_DW1000_SPI_ALT); // DW1000: SPI0 MOSI
	PORT_SetPinMux(BOARD_DW1000_SPI_PORT, BOARD_DW1000_SPI_MISO_PIN, BOARD_DW1000_SPI_ALT); // DW1000: SPI0 MISO
	PORT_SetPinMux(BOARD_DW1000_GPIO_PORT, BOARD_DW1000_GPIO_IRQ_PIN, BOARD_DW1000_GPIO_ALT); // DW1000: IRQ
	PORT_SetPinMux(BOARD_DW1000_GPIO_PORT, BOARD_DW1000_GPIO_SYNC_PIN, BOARD_DW1000_GPIO_ALT); // DW1000: SYNC
	PORT_SetPinMux(BOARD_DW1000_GPIO_PORT, BOARD_DW1000_GPIO_WAKEUP_PIN, BOARD_DW1000_GPIO_ALT); // DW1000: IRQ
	PORT_SetPinMux(BOARD_DW1000_GPIO_PORT, BOARD_DW1000_GPIO_RST_PIN, BOARD_DW1000_GPIO_ALT); // DW1000: IRQ

	// CSAC Serial


	// PLL SPI
	PORT_SetPinMux(BOARD_PLL_SPI_PORT, BOARD_PLL_SPI_CS_PIN, BOARD_PLL_SPI_ALT); // PLL: SPI1 CS0
	PORT_SetPinMux(BOARD_PLL_SPI_PORT, BOARD_PLL_SPI_SCK_PIN, BOARD_PLL_SPI_ALT); // PLL: SPI1 SCK
	PORT_SetPinMux(BOARD_PLL_SPI_PORT, BOARD_PLL_SPI_MOSI_PIN, BOARD_PLL_SPI_ALT); // PLL: SPI1 MOSI
	PORT_SetPinMux(BOARD_PLL_SPI_PORT, BOARD_PLL_SPI_MISO_PIN, BOARD_PLL_SPI_ALT); // PLL: SPI1 MISO
	PORT_SetPinMux(BOARD_PLL_IO_PORT, BOARD_PLL_IO_CE_PIN, BOARD_PLL_IO_ALT); // PLL: CE
	PORT_SetPinMux(BOARD_PLL_IO_PORT, BOARD_PLL_IO_TRCTL_PIN, BOARD_PLL_IO_ALT); // PLL: TRCTL

	// Debug Serial
	PORT_SetPinMux(PORTA, 1U, kPORT_MuxAlt2); // Debug Serial: UART0 TX
	PORT_SetPinMux(PORTA, 2U, kPORT_MuxAlt2); // Debug Serial: UART0 RX
}
